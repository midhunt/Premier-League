rm(list = ls())
# setting path to the working directory
setwd(paste(
Sys.getenv("MyGitRepo"),
"Premier-League",
sep = "/")
)
getwd()
library(data.table)
library(reshape)
FPL_Player_Statistics <- do.call("rbind",
lapply(
list.dirs("Teams",
recursive = F,
full.names = T),
FUN = function(folder) {
Reduce(function(...) merge(..., all=T),
lapply(list.files(folder,
full.names = T),
FUN = function(files){
fread(files)
}
)
)
}
)
)
View(FPL_Player_Statistics)
str(FPL_Player_Statistics)
FPL_Player_Statistics[, selected_by_percent := as.numeric(
gsub("%$",
"",
selected_by_percent
)
)]
View(FPL_Player_Statistics)
FPL_Player_Statistics[, as.numeric(gsub("^£", "", .SD)),
.SDcols = c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")]
View(FPL_Player_Statistics)
FPL_Player_Statistics[, lapply(.SD, FUN = function(x){
as.numeric(gsub("^£", "", x))
}),
.SDcols = c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")]
View(FPL_Player_Statistics)
FPL_Player_Statistics[, c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall") = lapply(.SD, FUN = function(x){
as.numeric(gsub("^£", "", x))
}), .SDcols = c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")]
FPL_Player_Statistics[, .SD = lapply(.SD, FUN = function(x){
as.numeric(gsub("^£", "", x))
}), .SDcols = c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")]
FPL_Player_Statistics[, .SDcols = lapply(.SD, FUN = function(x){
as.numeric(gsub("^£", "", x))
}), .SDcols = c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")]
cost_columns <- c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")
FPL_Player_Statistics[, (cost_columns) = lapply(.SD,
FUN = function(x){
as.numeric(gsub("^£", "", x))
}
),
.SDcols = cost_columns]
FPL_Player_Statistics[, (cost_columns) := lapply(.SD,
FUN = function(x){
as.numeric(gsub("^£", "", x))
}
),
.SDcols = cost_columns]
View(FPL_Player_Statistics)
cost_columns_newnames <- c("now_cost_pounds", "cost_change_event_pounds",
"cost_change_event_fall_pounds", "cost_change_start_pounds",
"cost_change_start_fall_pounds")
setnames(x = FPL_Player_Statistics,
old = cost_columns,
new = cost_columns_newnames)
str(FPL_Player_Statistics)
rm(list = ls())
setwd(paste(
Sys.getenv("MyGitRepo"),
"Premier-League",
sep = "/")
)
library(data.table)
library(reshape)
FPL_Player_Statistics <- do.call("rbind",
lapply(
list.dirs("Teams",
recursive = F,
full.names = T),
FUN = function(folder) {
Reduce(function(...) merge(..., all=T),
lapply(list.files(folder,
full.names = T),
FUN = function(files){
fread(files)
}
)
)
}
)
)
?merge
list.dirs("Teams",
recursive = F,
full.names = T)
FPL_Player_Statistics <- do.call("rbind",
lapply(
list.dirs("Teams",
recursive = F,
full.names = T),
FUN = function(folder) {
Reduce(function(...) merge(...,
by = c("player_name", "player_team",
"player_location", "now_cost",
"selected_by_percent", "form",
"total_points"),
all=T),
lapply(list.files(folder,
full.names = T),
FUN = function(files){
fread(files)
}
)
)
}
)
)
FPL_Player_Statistics <- do.call("rbind",
lapply(
list.dirs("Teams",
recursive = F,
full.names = T),
FUN = function(folder) {
Reduce(function(...) merge(...,
by = c("player_name", "player_team",
"player_location", "now_cost",
"selected_by_percent", "form",
"total_points"),
all=T),
lapply(list.files(folder,
full.names = T),
FUN = function(files){
fread(files)
}
)
)
}
)
)
View(FPL_Player_Statistics)
FPL_Player_Statistics[, selected_by_percent := as.numeric(
gsub("%$",
"",
selected_by_percent
)
)]
cost_columns <- c("now_cost", "cost_change_event",
"cost_change_event_fall", "cost_change_start",
"cost_change_start_fall")
FPL_Player_Statistics[, (cost_columns) := lapply(.SD,
FUN = function(x){
as.numeric(gsub("^£", "", x))
}
), .SDcols = cost_columns]
cost_columns_newnames <- c("now_cost_pounds", "cost_change_event_pounds",
"cost_change_event_fall_pounds", "cost_change_start_pounds",
"cost_change_start_fall_pounds")
setnames(x = FPL_Player_Statistics,
old = cost_columns,
new = cost_columns_newnames)
str(FPL_Player_Statistics)
FPL_Player_Statistics[yellow_cards >= 4, .(player_name, player_team, player_location)]
FPL_Player_Statistics[yellow_cards >= 4, .(player_name, player_team, player_location, yellow_cards)]
FPL_Player_Statistics[yellow_cards >= 4, .(player_name, player_team,
player_location, yellow_cards,
now_cost_pounds)]
FPL_Player_Statistics[yellow_cards >= 4, .(player_name, player_team,
player_location, yellow_cards,
now_cost_pounds, total_points)]
FPL_Player_Statistics[yellow_cards == 4, .(player_name, player_team,
player_location, yellow_cards,
now_cost_pounds, total_points)]
FPL_Player_Statistics[yellow_cards == 4, .(player_name, player_team,
player_location, minutes, yellow_cards,
now_cost_pounds, total_points)]
Improbable_List <- FPL_Player_Statistics[yellow_cards == 4, .(player_name, player_team,
player_location, minutes, yellow_cards,
now_cost_pounds, total_points)]
library(plyr)
names(Improbable_List)
?arrange
Improbable_List <- arrange(Improbable_List, desc(total_points, now_cost_pounds,
minutes))
Improbable_List <- arrange(Improbable_List, desc(total_points), desc(now_cost_pounds),
desc(minutes)))
Improbable_List <- arrange(Improbable_List, desc(total_points), desc(now_cost_pounds),
desc(minutes))
View(Improbable_List)
?desc
?order
order
?order
Improbable_List <- arrange(Improbable_List, order(total_points, decreasing = F), desc(now_cost_pounds),
desc(minutes))
View(Improbable_List)
Improbable_List <- arrange(Improbable_List, order(minutes, total_points,
now_cost_pounds, decreasing = F))
View(Improbable_List)
Improbable_List <- FPL_Player_Statistics[yellow_cards == 4, .(player_name, player_team,
player_location, yellow_cards, total_points,
now_cost_pounds, minutes)]
Improbable_List <- arrange(Improbable_List, order(minutes, total_points,
now_cost_pounds, decreasing = F))
View(Improbable_List)
Improbable_List <- FPL_Player_Statistics[yellow_cards == 4, .(player_name, player_team,
player_location, yellow_cards, total_points,
now_cost_pounds, minutes)]
Improbable_List <- arrange(Improbable_List, order(total_points, now_cost_pounds,
minutes, decreasing = F))
View(Improbable_List)
View(Improbable_List)
View(FPL_Player_Statistics)
library(ggplot2)
levels(as.factor(FPL_Player_Statistics$player_location))
names(FPL_Player_Statistics)
ggplot(FPL_Player_Statistics) +
geom_line(aes(x = influence, y = clean_sheets)) +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = influence, y = clean_sheets)) +
facet_wrap(~ player_location)
FPL_Player_Statistics[clean_sheets > 6 & influence > 500, player_name]
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = now_cost, y = ict_index))
names(FPL_Player_Statistics)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = now_cost_pounds, y = ict_index))
FPL_Player_Statistics[ict_index > 125, player_name]
FPL_Player_Statistics[ict_index > 125, .(player_name, now_cost_pounds)]
View(FPL_Player_Statistics)
FPL_Player_Statistics[ict_index > 125, .(player_name, now_cost_pounds, points_per_game)]
FPL_Player_Statistics[player_name = "Blind"]
FPL_Player_Statistics[player_name == "Blind"]
library(data.table)
library(reshape)
FPL_Player_Statistics[player_name == "Blind"]
levels(as.factor(FPL_Player_Statistics$dreamteam_count))
FPL_Player_Statistics[dreamteam_count == 4 & player_location == "DEF"]
FPL_Player_Statistics[dreamteam_count == 3 & player_location == "DEF"]
FPL_Player_Statistics[dreamteam_count == 2 & player_location == "DEF"]
FPL_Player_Statistics[player_location == "DEF" & form > 4]
FPL_Player_Statistics[player_location == "DEF" & form > 4 & now_cost_pounds <= 5]
FPL_Player_Statistics[player_team == "TOT"]
FPL_Player_Statistics[player_team == "TOT" & player_location == "DEF"]
FPL_Player_Statistics[player_team == "TOT" & player_location == "DEF" & minutes > 1000]
FPL_Player_Statistics[player_location == "DEF" & total_points > 40]
FPL_Player_Statistics[player_location == "DEF" & total_points > 40 & now_cost_pounds < 5]
FPL_Player_Statistics[player_location == "DEF"]
FPL_Player_Statistics[player_location == "DEF" & total_points >= 40]
FPL_Player_Statistics[player_name == "Fonte"]
range(FPL_Player_Statistics$value_season)
range(FPL_Player_Statistics$value_season, na.rm = T)
hist(FPL_Player_Statistics$value_season)
hist(FPL_Player_Statistics$value_season, breaks = 100)
library(ggplot2)
hist(FPL_Player_Statistics$value_season,
main = "Value in Season Histogram",
xlab = "Value Season",
ylab = "Frequency")
hist(FPL_Player_Statistics$value_season,
breaks = 100,
main = "Value in Season Histogram",
xlab = "Value Season",
ylab = "Frequency")
hist(FPL_Player_Statistics$value_form,
breaks = 100,
main = "Value Form Histogram",
xlab = "Value Form",
ylab = "Frequency")
FPL_Player_Statistics[player_name == "Fonte"]
range(FPL_Player_Statistics[player_location == "DEF", goals_conceded])
range(FPL_Player_Statistics[player_location == "DEF", goals_conceded], na.rm = T)
levels(FPL_Player_Statistics[player_location == "DEF", goals_conceded], na.rm = T)
levels(as.factor(FPL_Player_Statistics[player_location == "DEF", goals_conceded]))
FPL_Player_Statistics[player_name == "Blind"]
FPL_Player_Statistics[player_name == "Blind" | player_name == "Fonte"]
FPL_Player_Statistics[player_name %in% c("Blind", "Fonte", "Auley")]
FPL_Player_Statistics[player_name %in% c("Blind", "Fonte", "McAuley")]
hist(FPL_Player_Statistics$form,
breaks = 100,
main = "Form Histogram",
xlab = "Form",
ylab = "Frequency")
names(FPL_Player_Statistics)
library(ggplot2)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence, color = influence)) +
geom_point(aes(x = total_points, y = creativity, color = creativity)) +
geom_point(aes(x = total_points, y = threat, color = threat)) +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence), color = "red") +
geom_point(aes(x = total_points, y = creativity), color = "blue") +
geom_point(aes(x = total_points, y = threat), color = "green") +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence), color = "red") +
geom_point(aes(x = total_points, y = creativity), color = "blue") +
geom_point(aes(x = total_points, y = threat), color = "green") +
xlab("Influence, Creativity and Threat") +
ylab("Total Points") +
labs(title = "Comparison of Influence, Creativity and Threat vs Total Points w.r.t Player Position") +
facet_wrap(~ player_location)
?scale_color_manual
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence), color = "red") +
geom_point(aes(x = total_points, y = creativity), color = "blue") +
geom_point(aes(x = total_points, y = threat), color = "green") +
scale_color_manual(name = "Points",
values = c("red" = "red",
"blue" = "blue",
"green" = "green"),
labels = c("Influence", "Creativity", "Threat")) +
theme(legend.position = "bottom") +
xlab("Influence, Creativity and Threat") +
ylab("Total Points") +
labs(title = "Comparison of Influence, Creativity and Threat vs Total Points w.r.t Player Position") +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence), color = "red") +
geom_point(aes(x = total_points, y = creativity), color = "blue") +
geom_point(aes(x = total_points, y = threat), color = "green") +
scale_color_manual(name = "Points",
values = c("red" = "red",
"blue" = "blue",
"green" = "green"),
labels = c("Influence", "Creativity", "Threat")) +
# theme(legend.position = "bottom") +
xlab("Influence, Creativity and Threat") +
ylab("Total Points") +
labs(title = "Comparison of Influence, Creativity and Threat vs Total Points w.r.t Player Position") +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence, color = "red")) +
geom_point(aes(x = total_points, y = creativity, color = "blue")) +
geom_point(aes(x = total_points, y = threat, color = "green")) +
scale_color_manual(name = "Points",
values = c("red" = "red",
"blue" = "blue",
"green" = "green"),
labels = c("Influence", "Creativity", "Threat")) +
theme(legend.position = "bottom") +
xlab("Total Points") +
ylab("Influence, Creativity and Threat") +
labs(title = "Comparison of Influence, Creativity and Threat vs Total Points w.r.t Player Position") +
facet_wrap(~ player_location)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = total_points, y = influence, color = "red")) +
geom_point(aes(x = total_points, y = creativity, color = "blue")) +
geom_point(aes(x = total_points, y = threat, color = "green")) +
scale_color_manual(name = "Points",
values = c("red" = "red",
"blue" = "blue",
"green" = "green"),
labels = c("Influence", "Creativity", "Threat")) +
theme(legend.position = "bottom") +
xlab("Total Points") +
ylab("Influence, Creativity and Threat") +
labs(title = "Influence, Creativity and Threat vs Total Points w.r.t Player Position") +
facet_wrap(~ player_location)
names(FPL_Player_Statistics)
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = form, y = event_points)) +
facet_wrap(~ player_location) +
xlab("Player Form") +
ylab("Match Points") +
labs(title = "Does Form Really Have Impact on Points")
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = value_form, y = event_points)) +
facet_wrap(~ player_location) +
xlab("Player Form") +
ylab("Match Points") +
labs(title = "Does Form Really Have Impact on Points")
library(data.table)
FPL_Player_Statistics[event_points >= 14]
ggplot(FPL_Player_Statistics) +
geom_point(aes(x = form, y = points_per_game)) +
facet_wrap(~ player_location) +
xlab("Form") +
ylab("Average Points") +
labs(title = "Does Form Really Have Impact on Points")
FPL_Player_Statistics[player_location == "MID" & points_per_game > 8]
FPL_Player_Statistics[points_per_game >= 5]
FPL_Player_Statistics[points_per_game >= 5 & player_location == "DEF"]
FPL_Player_Statistics[player_name %in% c("Blind", "Monreal", "Gibson", "McAuley",
"Walker", "Ibrahimovic", "Firmino")]
FPL_Player_Statistics[player_name %in% c("Blind", "Monreal", "Gibson", "McAuley",
"Walker", "Ibrahimovic", "Firmino", "Cech")]
FPL_Player_Statistics[player_name %in% c("Blind", "Monreal", "Gibson", "McAuley",
"Walker", "Ibrahimovic", "Firmino", "Cech",
"Kean", "Kante", "Austin")]
FPL_Player_Statistics[player_name %in% c("Blind", "Monreal", "Gibson", "McAuley",
"Walker", "Ibrahimovic", "Firmino", "Cech",
"Keane", "Kante", "Austin", "Hazard",
"Walcott", "Capoue")]
CurrentTeamStats <- FPL_Player_Statistics[player_name %in% c("Monreal", "Gibson",
"McAuley", "Walker",
"Ibrahimovic", "Firmino",
"Cech", "Keane", "Kante",
"Austin", "Hazard",
"Walcott", "Capoue",
"Kolarov")]
View(CurrentTeamStats)
range(CurrentTeamStats$form)
str(FPL_Player_Statistics)
